@using OnlineCash.DataBaseModels
@using System.Linq 
@model OnlineCash.DataBaseModels.Stocktaking

<div style="height: calc(100vh - 150px); display: grid; grid-template-rows: 40px 40px auto ">
    <div>
        <h5>№ @Model.Num от @Model.Create.ToString("dd.MM") @Model.Shop?.Name</h5>
    </div>

    <div style=display: grid; grid-template-columns: 100px 180px 10px auto">
        @if (Model.isSuccess == false)
        {
            <span id="btnSave" class="btn btn-sm btn-primary m-1">Сохранить</span>
        };
        <span id="btnSuccess" class="btn btn-sm btn-success m-1">Сохранить и принять</span>
        <div></div>
        <div>
            <input id="findGoods" list="findGoodList" placeholder="Поиск товара" class="form-control form-control-sm " style="display: inline-block; max-width:calc(100% - 105px)" />
            <datalist id="findGoodList">
                @foreach (Good g in ViewBag.Goods)
                {
                    <option data-id-good="@g.Id" data-unit="@g.Unit" data-price="@g.GoodPrices.Where(g=>g.ShopId==Model.ShopId).FirstOrDefault()?.Price.ToString().Replace(",",".")" value="@g.Name"></option>
                }
            </datalist>
            <span id="findBtnAdd" class="btn btn-sm btn-primary" style="width: 100px">Добавить</span>
        </div>
    </div>
    <div class="mt-5" style="overflow-y: scroll;">
        <table class="table table-sm table-bordered table-hover">
            <thead>
                <tr>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Товар</th>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Ед</th>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Цена</th>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Система</th>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Факт</th>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Разница</th>
                    <th style="position: sticky; top: 0; z-index: 2; background: white;">Остаток руб</th>
                </tr>
            </thead>
            <tbody id="tableGoods">
                @foreach (var stgood in Model.StocktakingGoods)
                {
                    
                    <tr data-id="@stgood.Id" data-price="@stgood.Good.Price" data-id-good="@stgood.GoodId">
                        <td>@stgood.Good.Name</td>
                        <td>@stgood.Good.Unit</td>
                        <td>@stgood.Price.ToString().Replace(",",".")</td>
                        <td countdb>@stgood.CountDB.ToString().Replace(",",".")</td>
                        <td><input oninput="changeCountFact(this)" class="form-control form-control-sm" value="@stgood.CountFact.ToString().Replace(",",".")"></td>
                        <td countDiff>@(Math.Round((stgood.CountFact - stgood.CountDB),3).ToString().Replace(",","."))</td>
                        <td sumDiff>@((stgood.Price* (decimal)(stgood.CountFact - stgood.CountDB)).ToString().Replace(",","."))</td>
                    </tr>
                }
            </tbody>
            <tfoot id="tableSummary">
                <tr>
                    <th colspan="5">Итого</th>
                    <th countSummary>@Math.Round(Model.StocktakingGoods.Sum(s=>s.CountFact - s.CountDB),2)</th>
                    <th sumSummary>@Math.Round(Model.StocktakingGoods.Sum(s=>s.Price * ((decimal)s.CountFact - (decimal)s.CountDB)),2)</th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<script>
    var idAct =@Model.Id ;
    var idShop = @Model.Shop.Id ;
    const findGoods = document.getElementById("findGoods");
    const findGoodList = document.getElementById("findGoodList");
    const findBtnAdd = document.getElementById("findBtnAdd");
    const tableGoods = document.getElementById("tableGoods");
    const tableSummary = document.getElementById("tableSummary");
    const btnSave = document.querySelector("#btnSave");
    const btnSuccess = document.querySelector("#btnSuccess");

    function goodAdd(good) {
        let flagaded = false;
        tableGoods.querySelectorAll("tr").forEach(tr => {
            if (tr.dataset.idGood == good.id) {
                tr.scrollIntoView({
                    behavior: 'smooth',
                    block: 'center',
                    inline: 'center'
                });
                let inpCountFact = tr.querySelector("input");
                if (good.unit == "PCE" || good.unit == "796") {
                    inpCountFact.value = parseFloat(inpCountFact.value) + 1;
                    changeCountFact(inpCountFact);
                }
                flagaded = true;
            }
        })
        if (!flagaded) {
            let tr = document.createElement("tr");
            tr.dataset.idGood = good.id;
            tr.dataset.id = -1;
            tr.dataset.price = good.price;
            let countFact = good.unit == "PCE" || good.unit=="796" ? 1 : 0;
            tr.innerHTML = `
                    <td>${good.name}</td>
                    <td>${good.unit}</td>
                    <td>${good.price}</td>
                    <td countdb>0</td>
                    <td><input oninput="changeCountFact(this)" class="form-control form-control-sm" value="${countFact}"></td>
                    <td countDiff>${countFact}</td>
                    <td sumDiff>${(parseFloat(good.price) * countFact)}</td>
`;
            tableGoods.prepend(tr);
        };
    }

    findBtnAdd.addEventListener("click", () => {
        console.log("click");
        let findGoodStr = findGoods.value;
        if (findGoods.value != "")
            findGoodList.querySelectorAll("option").forEach(option => {
                if (findGoodStr == option.value) {
                    let idGood = option.dataset.idGood;
                    let price = parseFloat(option.dataset.price == "" ? 0 : option.dataset.price);
                    let goodName = option.value;
                    let good = {
                        id: option.dataset.idGood,
                        unit: option.dataset.unit,
                        name: option.value,
                        price: price
                    }
                    goodAdd(good);
                    findGoods.value = "";
                }
            });
    })
    btnSave.addEventListener("click", e => { Save(e.target); })
    btnSuccess.addEventListener("click", e => Save(e.target))
    function Save(btn) {
        let isSuccess = btn.id == "btnSuccess";
        let goods = [];
        tableGoods.querySelectorAll("tr").forEach(tr => {
            let id = tr.dataset.id;
            let idGood = tr.dataset.idGood;
            let price = tr.dataset.price;
            let tdCountDb = parseFloat(tr.querySelector("td[countDb]").textContent);
            let tdCount = parseFloat(tr.querySelector("input").value.replace(",","."));
            goods.push({
                id: id,
                idGood: idGood,
                count: 0,
                countDb: tdCountDb,
                countFact: tdCount,
                price: price
            });
        })
        fetch("/Stocktaking/Save", {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: idAct, isSuccess: isSuccess, goods: goods })
        })
            .then(resp => {
                if (resp.status != 200) {
                    alert("Ошибка сохранения");
                    return false;
                }
                window.location.href = "/stocktaking";
            });
    }

    var code = "";
    window.onkeydown = (e) => {
        let digitals = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"];
        if (digitals.indexOf(e.key) > -1)
            code = code + e.key;
        if (e.key == "Enter" && code != "") {
            fetch("/api/goods/barcode/" + code)
                .then(resp => resp.json())
                .then(good => {
                    let price = good.Price;
                    good.GoodPrices.forEach(p => { if (p.ShopId == idShop) price = p.Price });
                    let _good = {
                        id: good.Id,
                        unit: good.Unit,
                        name: good.Name,
                        price: price
                    };
                    goodAdd(_good);
                })
            code = "";
        };
    }

    function changeCountFact(inp) {
        let tr = inp.parentNode.parentNode;
        let price = parseFloat(tr.dataset.price);
        let countDb = parseFloat(tr.querySelector("td[countdb]").textContent.replace(",", "."));
        let countFact = parseFloat(tr.querySelector("input").value.replace(",","."));
        tr.querySelector("td[countdiff]").textContent = (countFact - countDb).toFixed(3);
        tr.querySelector("td[sumdiff]").textContent = ((countFact - countDb) * price).toFixed(2);
        calcSummary();
    }
    function calcSummary() {
        let countSummary = 0;
        let sumSummary = 0;
        tableGoods.querySelectorAll("tr").forEach(tr => {
            countSummary += parseFloat(tr.querySelector("td[countdiff]").textContent);
            sumSummary += parseFloat(tr.querySelector("td[sumdiff]").textContent);
        });
        tableSummary.querySelector("th[countSummary]").textContent = countSummary.toFixed(3);
        tableSummary.querySelector("th[sumSummary]").textContent = sumSummary.toFixed(2);
    }
</script>