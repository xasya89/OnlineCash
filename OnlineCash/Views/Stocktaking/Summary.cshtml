@using OnlineCash.DataBaseModels
@{ 
    Layout = "/Views/Shared/_LayoutEmpty.cshtml";
}
@model OnlineCash.Models.StockTackingModels.StocktackingSummaryModel

<div class="row mt-4 d-print-none">
    <div class="col-12">
        <h4>Инверторизация @Model.Start.ToString("dd.MM.yy HH:mm")</h4>
        <h5 class="mb-1">Сумма товара в магазине до инверторизации @Model.SumDb</h5>
        <h5 class="mb-1">Сумма товара в магазине по инверторизации @Model.SumFact</h5>
        @if (Model.SumFact - Model.SumDb > 0)
        {
            <h5>Пересорт @(Model.SumFact - Model.SumDb) руб.</h5>
        }
        @if (Model.SumFact - Model.SumDb < 0)
        {
            <h5>Недостача @(Model.SumDb - Model.SumFact) руб.</h5>
        }
        <button onclick="window.print()" class="btn btn-sm btn-secondary">Печать</button>
    </div>
</div>

<div class="row mt-1 d-print-none">
    <div class="col-lg-4">
        <input id="findGood" oninput="find()" class="form-control form-control-sm" placeholder="Поиск" />
    </div>
    <div class="col-lg">
        <label class="form-label">Группа</label>
    </div>
    <div class="col-lg">
        <select onchange="window.location.href = '/stocktaking/summary/' +@Model.Id+'?goodGroupId=' + this.value" asp-items="@(new SelectList(ViewBag.GoodGroups, nameof(GoodGroup.Id), nameof(GoodGroup.Name)))"></select>
    </div>
</div>

<div class="table-responsive table-responsive-sm mt-2">
    <table class="table table-bordered table-hover table-sm">
        <thead>
            <tr>
                <th>Товар</th>
                <th>Ед</th>
                <th>Предыдущая инверт</th>
                <th>Факт остаток</th>
                <th>Расхождение</th>
                <th>Сумма расхождения</th>
            </tr>
        </thead>
        <tbody id="summaryTable">
            @{ decimal sumDifference = 0; }
            @foreach (var summary in Model.Goods)
            {
                sumDifference += summary.SumEnd;
                string background = "";
                if (summary.CountFact - summary.CountDb > 0)
                    background = "bg-info";
                if (summary.CountFact - summary.CountDb < 0)
                    background = "bg-warning";
                <tr class="@background" onclick="openDocDetail(@summary.GoodId, '@summary.GoodName')">
                    <td goodName>@summary.GoodName</td>
                    <td>@summary.Unit.GetDescription()</td>
                    <td>@summary.CountLast</td>
                    <td>@summary.CountFact</td>
                    <td>@summary.CountEnd</td>
                    <td>@summary.SumEnd</td>
                </tr>
            }
        </tbody>
        <thead>
            <tr>
                <th colspan="5">Итого</th>
                <th>@sumDifference</th>
            </tr>
        </thead>
    </table>
</div>

<div class="modal fade" id="docDetailModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="docDetailGoodName"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body table-responsive">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th>Документ</th>
                            <th>Номер</th>
                            <th>Кол-во</th>
                        </tr>
                    </thead>
                    <tbody id="docDetailList"></tbody>
                    <tbody>
                        <tr>
                            <th colspan="2"></th>
                            <th id="docDetailCountSummary"></th>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>
<script>
    var idAct =@Model.Id ;

    const findGood = document.getElementById("findGood");
    const summaryTable = document.getElementById("summaryTable");
    const docDetailModal = new bootstrap.Modal(document.getElementById('docDetailModal'), {});
    const docDetailGoodName = document.getElementById("docDetailGoodName");
    const docDetailList = document.getElementById("docDetailList");
    const docDetailCountSummary = document.getElementById("docDetailCountSummary");

    function find() {
        let str = findGood.value.toLowerCase();
        summaryTable.querySelectorAll("tr").forEach(tr => {
            let name = tr.querySelector("td[goodName]").textContent;
            if (name.toLowerCase().indexOf(str) != -1)
                tr.style.display = "table-row";
            else
                tr.style.display = "none";
        })
    }

    function openDocDetail(goodId, goodName) {
        docDetailGoodName.textContent = goodName;
        docDetailList.querySelectorAll("tr").forEach(tr => tr.remove());
        fetch(`/Stocktaking/GetDetailGoodCountByDocs?stocktakingId=${idAct}&goodId=${goodId}`)
            .then(r => r.json())
            .then(docs => docs.forEach(doc => {
                if (doc.type != "Итог") {
                    let tr = document.createElement("tr");
                    tr.innerHTML = `<td>${doc.type}</td><td>${doc.num}</td><td>${doc.count}</td>`;
                    docDetailList.append(tr);
                }
                else
                    docDetailCountSummary.textContent = doc.count;
            }));

        docDetailModal.show();
    }
</script>