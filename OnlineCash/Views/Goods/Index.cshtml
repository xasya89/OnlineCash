@model List<OnlineCash.DataBaseModels.Good>
@using OnlineCash.DataBaseModels
@using System

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <div class="row">
            <div class="col-auto">
                <a asp-controller="Goods" asp-action="Create" class="btn btn-sm btn-primary"><span class="fa fa-plus"></span>Создать</a>
            </div>
            <div class="col-auto">
                <span onclick="goodGroupModal.show()" class="btn btn-primary btn-sm"><i class="fas fa-layer-group"></i> Группы</span>
            </div>
            <div class="col-auto">
                <div class="btn-group">
                    <span class="btn btn-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <span class="fa fa-print"></span> Печать
                    </span>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" asp-controller="Goods" asp-action="PrintPriceStepShop">Выбор позиций</a></li>
                        <li><a class="dropdown-item" asp-controller="Goods" asp-action="PrintAll" target="_blank">Все позиции</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <select id="shopList" class="form-select form-select-sm" style="float:left">
                                @foreach (var shop in (List<Shop>)ViewBag.Shops)
                                {
                                    <option value="@shop.Id">@shop.Name</option>
                                }
                            </select>
                        </li>
                        <li><a class="dropdown-item" onclick="printAllPrice()" href="#">Весь прайс</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" asp-controller="GoodsPrint" asp-action="SelectionGoods">Подбор товара</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <form asp-controller="Goods" asp-action="Search" method="get">
            <div class="row">
                <div class="col-auto">
                    <label class="form-label ">Группа</label>
                </div>
                <div class="col-auto">
                    @{ 
                        int? groupSearch = ViewBag.FindGroup;
                    }
                    <select name="group" asp-for="@groupSearch" asp-items="@(new SelectList(ViewBag.GoodGroups, nameof(GoodGroup.Id), nameof(GoodGroup.Name)))" class="form-select form-select-sm">
                        <option value="" selected></option>
                    </select>
                </div>
                <div class="col-auto">
                    <label class="form-label">Наименование</label>
                </div>
                <div class="col-auto">
                    <div class="d-flex">
                        <input name="find" value="@ViewBag?.Find" class="form-control form-control-sm me-2" type="search" placeholder="Наименование или штрихкод" aria-label="Search">
                        <button class="btn btn-sm btn-outline-success" type="submit">Найти</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</nav>

<table class="table table-sm table-hover">
    <thead>
        <tr>
            <th></th>
            <th>Группа</th>
            <th>Наименование</th>
            <th>Ед. изм</th>
            <th>Цена</th>
            <th>Магазины</th>
            <th>
                <a asp-controller="Goods" asp-action="SetFilterIsDeleted" class="btn btn-sm btn-light">
                    @if (ViewBag.FindIsDeleted)
                    {
                        <i class="fa fa-eye "></i>
                    }
                    else
                    {
                        <i class="fa fa-eye-slash "></i>
                    }
                </a>
                <label class="">Удаленные</label>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var g in Model)
        {
            string barcodeIcon = g.BarCodes.Count == 0 ? "" : "fa fa-barcode";
            <tr>
                <td><i class="@barcodeIcon"></i></td>
                <td>@g.GoodGroup?.Name</td>
                <td><a asp-controller="Goods" asp-action="Details" asp-route-id="@g.Id">@g.Name</a></td>
                <td><a asp-controller="Goods" asp-action="Details" asp-route-id="@g.Id">@g.Unit.GetDescription()</a></td>
                <td><a asp-controller="Goods" asp-action="Details" asp-route-id="@g.Id">@g.Price</a></td>
                <td>
                    @if (g.GoodPrices!=null)
                        @if((ViewBag.Shops as List<Shop>).Count==g.GoodPrices?.Count(gp => gp.BuySuccess))
                        {
                            <span>Все</span>
                        }
                        else
                        @foreach(var goodPrice in g.GoodPrices)
                        {
                            string shopNameShort = goodPrice.Shop.Name.Length > 3 ? goodPrice.Shop.Name.Substring(0, 3) : goodPrice.Shop.Name;
                            if(goodPrice.BuySuccess)
                            {
                                <span>@shopNameShort</span>
                            }
                        }
                </td>
                <td>
                    @if (g.IsDeleted)
                    {
                        <span onclick="if (confirm('Восстановить?')) window.location.href = '/goods/recove?id=@g.Id'" class="btn btn-sm btn-outline-success "><i class="fa fa-dot-circle-o "></i></span>
                    }
                    else
                    {
                        <span onclick="if (confirm('Удлаить?')) window.location.href = '/goods/delete?id=@g.Id'" class="btn btn-sm btn-outline-danger "><i class="fa fa-trash"></i></span>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>

<!--Диалог добавления группы-->
<div class="modal fade" id="modalGroups" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 style="display: block; clear: both;">Группы</h5>
            </div>
            <div class="modal-body">
                <div class="input-group input-group-sm mb-3">
                    <input id="goodGroupName" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" placeholder="Новая группа">
                    <span onclick="addGroup()" class="input-group-text" id="inputGroup-sizing-sm">Добавить</span>
                </div>
                <ul id="goodGroupList" class="list-group">
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-sm btn-primary">Сохранить</button>
            </div>
        </div>
    </div>
</div>

<script>

    const shopList = document.getElementById("shopList");
                        const goodGroupModal = new bootstrap.Modal(document.getElementById("modalGroups"));
                        const goodGroupName = document.getElementById("goodGroupName");
                        const goodGroupList = document.getElementById("goodGroupList");
                        var code = "";
                        window.onload = function () {
                            /*
                            const findInp = document.querySelector("input[name=find]");
                            findInp.oninput = function () {
                                fetch("/goods/SetSearch?search=" + findInp.value);
                            }
                            */
                            loadGroups();
                        }

                        function addGroupIntoList(group) {
                            let li = document.createElement("li");
                            li.classList.add("list-group-item");
                            li.dataset.id = group.id;
                            console.log(group);
                            li.innerHTML = `<span class="fa fa-trash"></span> ${group.name}`;
                    li.querySelector("span").addEventListener("click", () => {
                    if (confirm(`Удалить ${group.name}?`))
                fetch(`/api/goodgroups/${group.id}`, { method: "DELETE" })
                    .then(resp => {
                        if (resp.status == 200)
                            li.remove();
                        else
                            alert("Ошибка удаления");
                    })
        });
        goodGroupList.append(li);
    }

    function loadGroups() {
        goodGroupList.querySelectorAll("li").forEach(li => li.remove());
        fetch("/api/goodgroups")
            .then(resp => resp.json())
            .then(groups => groups.forEach(group => addGroupIntoList(group)))
    }

    function addGroup() {
        let body = new FormData();
        body.append("Name", goodGroupName.value);
        if (goodGroupName.value != "")
            fetch("/api/goodgroups/", {
                method: "POST",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name: goodGroupName.value })
            })
                .then(resp => {
                    if (resp.status == 200)
                        resp.json().then(group => addGroupIntoList(group));
                });
    }

    function printAllPrice() {
        let idShop = shopList.value;
        window.open(`/goods/PrintPriceAll?idShop=${idShop}`, "_blank");
    }

    //Диалог выбор группы

</script>
<script src="~/js/modalGroupSelected.js"></script>
<script>
    //Печать ценников с выбором группы
    function printPriceWithGroupSelected() {
        let modalGroup = new ModalGroupSelected();
        modalGroup.Open()
            .then(groups => {
                let idShops = new Array();
                idShops.push(parseInt(shopList.value));
                let idGroups = new Array();
                groups.forEach(group => idGroups.push(parseInt(group.id)));
                window.open("/goods/PrintPriceTagWithSelectionGroup?" + JSOn.stringify({ idGroups: idGroups, idShops: idShops }), "_blank");
            })
    }
</script>