// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotificationServer.DatabaseModels;

namespace NotificationServer.Migrations
{
    [DbContext(typeof(shop_registrationContext))]
    partial class shop_registrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8")
                .UseCollation("utf8_unicode_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("NotificationServer.DatabaseModels.NotificationClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("NotificationClients");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.NotifySubscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NotificationClientId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationClientId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("NotifySubscribes");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Inn")
                        .HasColumnType("longtext");

                    b.Property<string>("OrgName")
                        .HasColumnType("longtext");

                    b.Property<string>("Secret")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("ServerUrl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.NotifySubscribe", b =>
                {
                    b.HasOne("NotificationServer.DatabaseModels.NotificationClient", "NotificationClient")
                        .WithMany("NotifySubscribes")
                        .HasForeignKey("NotificationClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotificationServer.DatabaseModels.Organization", "Organization")
                        .WithMany("NotifySubscribes")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationClient");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.Shop", b =>
                {
                    b.HasOne("NotificationServer.DatabaseModels.Organization", "Organization")
                        .WithMany("Shops")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.NotificationClient", b =>
                {
                    b.Navigation("NotifySubscribes");
                });

            modelBuilder.Entity("NotificationServer.DatabaseModels.Organization", b =>
                {
                    b.Navigation("NotifySubscribes");

                    b.Navigation("Shops");
                });
#pragma warning restore 612, 618
        }
    }
}
